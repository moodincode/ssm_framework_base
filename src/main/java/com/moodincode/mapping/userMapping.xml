<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "-//www.mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的 -->
<mapper namespace="com.moodincode.mapper.UserMapper">
    <!--结果映射到bean对象中-->
    <resultMap id="UserMap" type="com.moodincode.beans.User" >
        <!--id属性只能为一个，其他用result属性设置值，property为数据库字段名-->
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="sex" property="sex" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="INTEGER" />
    </resultMap>

    <!-- 创建表 -->
    <!--<update id="createTable" parameterType="String">
        create table ${tableName} (id int primary key auto_increment,name varchar(20),age int)
    </update>-->
    <!-- 添加数据 需要在UserMapper对象中定义方法名为此Id值的方法 -->
    <!--#{属性名}格式作为参数使用，需要在UserMapper中定义方法的传参的参数名和此处属性名的值一致。否则无法调用-->
    <insert id="add" parameterType="com.moodincode.beans.User">
        insert into t_user(name,sex,age) value(#{name},#{sex},#{age})
    </insert>
    <!-- 删除数据 需要在UserMapper对象中定义方法名为此Id值的方法 -->
    <delete id="del" parameterType="int">
        delete from t_user where id = #{id}
    </delete>
    <!-- 修改数据 需要在UserMapper对象中定义方法名为此Id值的方法-->
    <update id="update" parameterType="com.moodincode.beans.User">
        update t_user set name=#{name},sex=#{sex},age=#{age} where id=#{id}
    </update>
    <!--根据id查询得到一个user对象 需要在UserMapper对象中定义方法名为此Id值的方法-->
    <select id="getUser" parameterType="int"
            resultType="com.moodincode.beans.User">
        select * from t_user where id=#{id}
    </select>
    <!-- 查询所有的用户需要在UserMapper对象中定义方法名为此Id值的方法 -->
    <select id="list" resultType="com.moodincode.beans.User">
        select * from t_user;
    </select>
</mapper>